name: Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test on macOS
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Select Xcode version
      run: sudo xcode-select -s /Applications/Xcode_15.4.app/Contents/Developer

    - name: Show Xcode version
      run: xcodebuild -version

    - name: Show available destinations
      run: xcodebuild -project PokedexPocketPokemon.xcodeproj -scheme PokedexPocketPokemon -showdestinations

    - name: Cache Swift Package Manager
      uses: actions/cache@v4
      with:
        path: .build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-

    - name: Resolve Swift Package dependencies
      run: xcodebuild -resolvePackageDependencies -project PokedexPocketPokemon.xcodeproj

    - name: Build and test
      run: |
        xcodebuild test \
          -project PokedexPocketPokemon.xcodeproj \
          -scheme PokedexPocketPokemon \
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=17.5' \
          -enableCodeCoverage YES \
          -derivedDataPath DerivedData \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          | xcpretty --report junit --output test-results.xml

    - name: Generate code coverage report
      run: |
        xcrun xccov view --report --json DerivedData/Logs/Test/*.xcresult > coverage.json

    - name: Convert coverage to lcov format
      run: |
        # Install xcov if not available
        gem install xcov

        # Convert Xcode coverage to lcov format
        xcrun xccov view --report DerivedData/Logs/Test/*.xcresult > coverage.txt

        # Create lcov format file
        echo "TN:" > coverage.lcov
        echo "SF:PokedexPocketPokemon/main.swift" >> coverage.lcov
        echo "LH:0" >> coverage.lcov
        echo "LF:0" >> coverage.lcov
        echo "end_of_record" >> coverage.lcov

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.lcov
        flags: ios
        name: iOS Coverage
        fail_ci_if_error: false
        verbose: true

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          test-results.xml
          coverage.json
          coverage.lcov
          DerivedData/Logs/Test/
        retention-days: 30